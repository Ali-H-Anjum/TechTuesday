from googlesearch import search
import urllib.request
from bs4 import BeautifulSoup
import requests
from googlesearch import search as search_v2
from datetime import date, timedelta

def google_scrape(url):
    r = requests.get(url)
    if r.status_code == 200:
        soup = BeautifulSoup(r.content, "html.parser")
        if soup.title is not None:
            return soup.title.text
        else:
            return None
    else:
        print(f"Error: {r.status_code}")
        return None

def search_v2(query, start=0):
    url = f"https://www.google.com/search?q={query}&start={start}"
    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"}
    try:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            soup = BeautifulSoup(response.content, "html.parser")
            links = []
            for h3 in soup.find_all("h3"):
                link = h3.find("a")
                if link:
                    href = link["href"]
                    if href.startswith("/url?q="):
                        href = href[7:]
                    if not href.startswith("http"):
                        continue
                    links.append(href)
            next_page = soup.find("a", {"id": "pnnext"})
            if next_page:
                return links, next_page["href"]
            else:
                return links, None
        else:
            print(f"Error: {response.status_code}")
            return [], None
    except Exception as e:
        print(e)
        return [], None


today = date.today()
last_monday = today - timedelta(days=today.weekday()) - timedelta(days=0)

query = f'technology news since {last_monday} until: {today}'
start = 0
while True:
    results, next_page = search_v2(query, start=start)
    for url in results:
        title = google_scrape(url)
        if title is not None:
            print(title)
            print(url)
            print()
    if next_page:
        start += 1
    else:
        break